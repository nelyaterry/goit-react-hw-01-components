{"version":3,"sources":["components/App/App.styled.jsx","assets/Container.styled.jsx","components/Profile/Profile.styled.jsx","components/Profile/Profile.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendList.styled.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.styled.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.jsx","index.js"],"names":["Container","styled","div","Description","Avatar","img","Name","p","Tag","Location","Stats","ul","Stat","li","Label","span","Quantity","Profile","name","tag","location","avatar","followers","views","likes","src","alt","Title","h2","StatsList","StatItem","Span","Statistic","title","stats","map","id","label","percentage","style","backgroundColor","generateColor","Math","random","toString","substr","Friends","Frienditem","IsOnline","props","isOnline","FriendList","friends","width","Table","table","Header","thead","HeaderTh","th","Body","tbody","TabelRow","tr","TabelDate","td","TransactionHistory","items","type","amount","currency","protoTypes","PropTypes","arrayOf","shape","string","isRequired","user","App","Statistics","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e98c4be7.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 32px;\n  background-color: rgb(242, 242, 242);\n  font-size: 24px;\n  border-radius: 4px;\n  color: black;\n  font-weight: bold;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  width: 400px;\n  background-color: rgba(228, 228, 228, 0.5);\n  margin-bottom: 60px;\n  border-radius: 5%;\n  box-shadow: rgba(0, 0, 0, 0.15) 2px 2px 3px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: rgb(75, 75, 75);\n  font-size: 20px;\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 50%;\n  background-color: rgb(228, 228, 228);\n  width: 100px;\n  margin-top: 60px;\n`;\n\nexport const Name = styled.p`\n  color: black;\n  font-size: 40px;\n  margin-top: 60px;\n`;\n\nexport const Tag = styled.p`\n  margin-top: 20px;\n`;\n\nexport const Location = styled.p`\n  margin-top: 20px;\n`;\n\nexport const Stats = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: rgb(75, 75, 75);\n  margin: 60px 0 0 0;\n  padding: 0;\n`;\n\nexport const Stat = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: calc(100% / 3);\n  padding: 20px 0;\n  background-color: rgba(129, 151, 151, 0.3);\n  border: rgb(129, 151, 151) solid 1px;\n`;\n\nexport const Label = styled.span``;\n\nexport const Quantity = styled.span``;\n","import PropTypes from \"prop-types\";\n\nimport { Container } from \"../../assets/Container.styled\";\nimport {\n  Description,\n  Avatar,\n  Name,\n  Tag,\n  Location,\n  Stats,\n  Stat,\n  Label,\n  Quantity,\n} from \"./Profile.styled\";\n\nexport const Profile = ({\n  name,\n  tag,\n  location,\n  avatar,\n  followers,\n  views,\n  likes,\n}) => {\n  return (\n    <Container>\n      <Description>\n        <Avatar src={avatar} alt=\"Аватар пользователя\" />\n        <Name>{name}</Name>\n        <Tag>@{tag}</Tag>\n        <Location>{location}</Location>\n      </Description>\n\n      <Stats>\n        <Stat>\n          <Label>Followers</Label>\n          <Quantity>{followers}</Quantity>\n        </Stat>\n        <Stat>\n          <Label>Views</Label>\n          <Quantity>{views}</Quantity>\n        </Stat>\n        <Stat>\n          <Label>Likes</Label>\n          <Quantity>{likes}</Quantity>\n        </Stat>\n      </Stats>\n    </Container>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  followers: PropTypes.number,\n  views: PropTypes.number,\n  likes: PropTypes.number,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h2`\n  color: black;\n  font-size: 40px;\n  margin: 60px 0;\n  text-align: center;\n`;\n\nexport const StatsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const StatItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: calc(100% / 5);\n  padding: 20px 0;\n`;\n\nexport const Span = styled.span`\n  color: rgb(255, 255, 255);\n`;\n","import PropTypes from \"prop-types\";\n\nimport { Container } from \"../../assets/Container.styled\";\nimport { Title, StatsList, StatItem, Span } from \"./Statistics.styled\";\n\nconst Statistic = ({ title, stats }) => {\n  return (\n    <Container>\n      {title && <Title>{title}</Title>}\n\n      <StatsList>\n        {stats.map(({ id, label, percentage }) => (\n          <StatItem key={id} style={{ backgroundColor: generateColor() }}>\n            <Span>{label}</Span>\n            <Span>{percentage}</Span>\n          </StatItem>\n        ))}\n      </StatsList>\n    </Container>\n  );\n};\n\nexport default Statistic;\n\nStatistic.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nconst generateColor = () => {\n  return `#${Math.random().toString(16).substr(-6)}`;\n};\n","import styled from \"@emotion/styled\";\n\nexport const Friends = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  margin: 0;\n  width: 400px;\n`;\n\nexport const Frienditem = styled.li`\n  display: flex;\n  align-items: center;\n  min-height: 50px;\n  margin-bottom: 10px;\n  padding: 12px 24px;\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.15) 2px 2px 3px;\n  background-color: rgba(228, 228, 228, 0.5);\n`;\n\nexport const IsOnline = styled.span`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin-right: 24px;\n  background-color: ${(props) => {\n    return props.isOnline ? \"#1cb15c\" : \"#f72500\";\n  }};\n`;\n\nexport const Avatar = styled.img`\n  margin-right: 24px;\n  border-radius: 10px;\n  border: 1px solid black;\n`;\n\nexport const Name = styled.p`\n  color: black;\n`;\n","import PropTypes from \"prop-types\";\n\nimport {\n  Friends,\n  Frienditem,\n  IsOnline,\n  Avatar,\n  Name,\n} from \"./FriendList.styled\";\n\nconst FriendList = ({ friends }) => {\n  return (\n    <Friends>\n      {friends.map(({ avatar, name, isOnline, id }) => (\n        <Frienditem key={id}>\n          <IsOnline isOnline={isOnline}></IsOnline>\n          <Avatar src={avatar} alt={name} width=\"80\" />\n          <Name>{name}</Name>\n        </Frienditem>\n      ))}\n    </Friends>\n  );\n};\n\nexport default FriendList;\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from \"@emotion/styled\";\n\nexport const Table = styled.table`\n  background-color: #ffffff;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Header = styled.thead`\n  background-color: rgb(112, 183, 224);\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 700;\n  text-transform: uppercase;\n  text-align: center;\n`;\n\nexport const HeaderTh = styled.th`\n  min-width: 240px;\n  padding: 12px;\n`;\n\nexport const Body = styled.tbody`\n  font-size: 18px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const TabelRow = styled.tr`\n&:nth-child(2n) {\n  background: rgba(228, 228, 228, 0.5);;\n`;\n\nexport const TabelDate = styled.td`\n  padding: 12px;\n`;\n","import PropTypes from \"prop-types\";\nimport {\n  Table,\n  Header,\n  HeaderTh,\n  Body,\n  TabelRow,\n  TabelDate,\n} from \"./TransactionHistory.styled\";\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <Table>\n      <Header>\n        <tr>\n          <HeaderTh>Type</HeaderTh>\n          <HeaderTh>Amount</HeaderTh>\n          <HeaderTh>Currency</HeaderTh>\n        </tr>\n      </Header>\n\n      <Body>\n        {items.map(({ id, type, amount, currency }) => (\n          <TabelRow key={id}>\n            <TabelDate>{type}</TabelDate>\n            <TabelDate>{amount}</TabelDate>\n            <TabelDate>{currency}</TabelDate>\n          </TabelRow>\n        ))}\n      </Body>\n    </Table>\n  );\n};\n\nexport default TransactionHistory;\n\nTransactionHistory.protoTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { Container } from \"./App.styled\";\nimport { Profile } from \"../Profile/Profile\";\nimport user from \"../../assets/user.json\";\nimport Statistics from \"../Statistics/Statistics\";\nimport statisticalData from \"../../assets/statistical-data.json\";\nimport FriendList from \"../FriendList/FriendList\";\nimport friends from \"../../assets/friends.json\";\nimport TransactionHistory from \"../TransactionHistory/TransactionHistory\";\nimport transactions from \"../../assets/transactions.json\";\n\nconst { name, tag, location, avatar, stats } = user;\n\nexport const App = () => {\n  return (\n    <>\n      <Container>\n        <Profile\n          name={name}\n          tag={tag}\n          location={location}\n          avatar={avatar}\n          followers={stats.followers}\n          views={stats.views}\n          likes={stats.likes}\n        />\n\n        <Statistics title=\"Upload stats\" stats={statisticalData} />\n        <Statistics stats={statisticalData} />\n\n        <FriendList friends={friends} />\n\n        <TransactionHistory items={transactions} />\n      </Container>\n    </>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}